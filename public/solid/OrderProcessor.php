<?php

namespace solid;

class OrderProcessor
{
    private OrderValidator $orderValidator;
    private OrderRepository $orderRepository;
    private MailerInterface $mailer;
    private LoggerInterface $logger;

    public function __construct(
        OrderValidator  $orderValidator,
        OrderRepository $orderRepository,
        MailerInterface $emailService,
        LoggerInterface $logger
    ) {
        $this->orderValidator = $orderValidator;
        $this->orderRepository = $orderRepository;
        $this->mailer = $emailService;
        $this->logger = $logger;
    }

    public function process(array $orderData): void
    {
        if (!$this->orderValidator->validate($orderData)) {
            $this->logger->log("Invalid order data");
        }

        $this->orderRepository->save($orderData);
        $this->mailer->send($orderData['user_email'], 'Your order has been placed.');

        echo "Order processed\n";
    }
}

//üîç –ü—Ä–æ–±–ª–µ–º—ã:
//‚úÖ SRP (Single Responsibility Principle) –Ω–∞—Ä—É—à–µ–Ω ‚Äî –∫–ª–∞—Å—Å –¥–µ–ª–∞–µ—Ç –≤—Å—ë: –≤–∞–ª–∏–¥–∞—Ü–∏—é, –ë–î, email, –ª–æ–≥.
//‚úÖ OCP (Open/Closed) ‚Äî –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ –±–µ–∑ –ø—Ä–∞–≤–∫–∏ –∫–æ–¥–∞.
//‚úÖ LSP (Liskov) ‚Äî –µ—Å–ª–∏ –±—ã –±—ã–ª —Ä–æ–¥–∏—Ç–µ–ª—å, —Ç–æ –ø–æ–¥–º–µ–Ω–∞ –º–æ–≥–ª–∞ –±—ã —Å–ª–æ–º–∞—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ.
//‚úÖ ISP (Interface Segregation) ‚Äî –µ—Å–ª–∏ –±—ã –±—ã–ª –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –æ–Ω –±—ã–ª –±—ã —Ä–∞–∑–¥—É—Ç.
//‚úÖ DIP (Dependency Inversion) ‚Äî –∂—ë—Å—Ç–∫–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç PDO, mail() –∏ file_put_contents.